#!/bin/sh

player="${TORRENTER_PLAYER:-mpv}"
client="${TORRENTER_CLIENT:-webtorrent}"
[ -t 0 ] && torrent="${TORRENTER_TORRENT:-piratebay}" || torrent="$TORRENTER_EXTERNAL_MENU_TORRENT"
menu="${TORRENTER_EXTERNAL_MENU:-rofi}"
nyaa_max_retries="${NYAA_MAX_RETRIES:-6}"
preview_box_size=13%

[ -f ~/.config/torrenter/config ] && . ~/.config/torrenter/config

#Checks Dependencies (plagarized from  ani-cli)
dep_ch () { 
    for dep; do
	      dep="${dep%% *}"
	      if ! command -v "$dep" >/dev/null; then
		        msg "Program \"$dep\" is not found" '\033[1;31m'
		        case "$dep" in
			#aria2c is in the package aria2
			aria2c) msg 'To install aria2c, Type <your_package_manager> aria2' '\033[1;32m' ;;
			webtorrent) msg "To install $dep, Type <your_package_manager> nodejs, then 'npm install -g webtorrent-cli'" '\033[1;32m' ;;
			peerflix) msg "To install $dep, Type <your_package_manager> nodejs, then 'npm install -g $dep'" '\033[1;32m' ;;
			mplayer | smplayer) printf '\033[1;32mWell, it seems like this is the first time you are running torrenter inside of Termux.
                Torrenter uses mpv-android & vlc intents from $PREFIX/bin/mplayer & $PREFIX/bin/smplayer respectively, specifically for streaming using webtorrent or peerflix & opens that up in mpv-android or vlc so that it does not confict with normal mpv-android or vlc intents.You need to have mpv-android or vlc installed.
                Do you want to setup $PREFIX/bin/mplayer & $PREFIX/bin/smplayer(y/n)\033[0m'
			    read -r REPLY

			    case "$REPLY" in
				[yY] | Yes | yes) printf 'am start --user 0 -a android.intent.action.VIEW -n org.videolan.vlc/org.videolan.vlc.gui.video.VideoPlayerActivity -d "${*##* }"' > $PREFIX/bin/smplayer && chmod +x "$PREFIX"/bin/smplayer && printf 'am start --user 0 -a android.intent.action.VIEW -n is.xyz.mpv/.MPVActivity -d "${*##* }"' > "$PREFIX"/bin/mplayer && chmod +x "$PREFIX"/bin/mplayer || err=true ;;
				*) msg Aborted '\033[1;31m' && err=true ;;
			    esac
    ;;
			*) msg "To install $dep, Type <your_package_manager> $dep" '\033[1;32m' ;;
		    esac
	    fi
    done
}

print_help () {
    printf "
    Usage:
    torrenter <Options> <search term>
    Defaults:
    client: webtorrent
    player: mpv
    torrent site: piratebay
    external menu: rofi
    torrent site for external menu: eztv
    Options:
    -v Play in vlc
    -m Play in mpv
    -d Download with aria2
    -g get magnet link
    -q Download with qbittorrent
    -i Use this only if you've some script like mpv-webtorrent-hook installed
    -x Scrape 1337x
    -p Scrape PirateBay
    -y Scrape yts
    -e Scrape eztv or yify
    -r Scrape Rarbg
    -n Scrape Nyaa
    -E Nyaa with English Translation
    -a Scrape Animetosho (Fast Nyaa Proxy & more)
    -w Use Webtorrent
    -f Use Peerflix

    You may add a config file in ~/.config/torrenter/config
    Eg:
    player=vlc
    torrent=piratebay
    client=peerflix
    menu=dmenu
    Note: If u wanna use some other menu make sure u specify everything properly ending with prompt like:
    cofi --line 20 --prompt
    Or may be only:
    torrent=nyaa
    Then \"player\", \"client\" & \"menu\" will fallback to default.

    Or u can export them like:
    export TORRENTER_PLAYER=aria2c
    export TORRENTER_TORRENT=piratebay
    export TORRENTER_CLIENT=peerflix
    export TORRENTER_EXTERNAL_MENU=dmenu
    export TORRENTER_EXTERNAL_MENU_TORRENT=rarbg

    Supported Players: mpv, vlc, aria2c, qbittorrent
    Supported Torrent Sites: 'x1337x', piratebay, yts, eztv, rarbg, nyaa, animetosho
    Supported Clients: webtorrrent, peerflix
" && exit
}

msg () {
    [ -t 0 ] && printf "$2%s\033[0m\n" "$1" || notify-send "$1"
}

menu () {
    case "$menu" in
	      rofi) rofi -dmenu -theme-str 'window {width: 90%;}' -i -p "$1" ;;
	      dmenu) dmenu -i -l 30 -p "$1" ;;
	      *) $menu "$1" ;;
    esac   
}

selection () {
    [ -z "$data" ] && msg 'No Result' '\033[1;31m' && exit 1
    # Unescape html chars
    data="$(printf '%s' "$data" | sed -E 's/&(quot|#34);/"/g;s/&(apos|#x27|#39);/\x27/g;s/&amp;/\&/g;s/&lt;/</g;s/&gt;/>/g;s/&#40;/(/g;s/&#41;/)/g')"

    if [ -t 0 ]; then
	      magnet="$(printf '%s' "$data" | fzf --with-nth 2.. --reverse --cycle --prompt 'Select a Torrent: ' --keep-right --preview "printf '%s' {} | sed 's/[^ ]*//'" --preview-label 'Torrent Name' --preview-window "down,$preview_box_size,nohidden:wrap")"
    else
	      line_num="$(printf '%s' "$data" | nl | sed -nE 's/^ *([0-9]*)[^ ]*/\1/p' | menu 'Select a Torrent: ')" && 
	      magnet="$(printf '%s' "$data" | sed "${line_num%% *} q;d")" || unset magnet
    fi
    
    [ -z "$magnet" ] && msg "Nothing's Selected" '\033[1;33m' && exit
}

select_and_play () {
    selection || $client $player "${magnet%% *}" 
}

exit_if_no_magnet_link() {
    selection || { 
	      magnet="$(curl -s $* "${magnet%% *}" | grep -m1 -o 'magnet:?xt[^"]*' || {
	      msg "Magnet link wasn't found" '\033[1;31m'
	      exit 1
	})"
	$client $player "$magnet"
    }    
}

piratebay () {
    data="$(curl -s "$http3" "https://thepiratebay.party/search/$name/1/99/0" | tr -d '\n' | sed 's,https://thepiratebay\.party/torrent/,\n,g' | sed -nE 's,[^"]*" title="[^"]*">(.*)</a>.*(magnet:\?xt=[^"]*).*<td align="right">([.0-9]*)&nbsp\;([^<]*)</td>.<td align="right">([0-9]*)</td>.<td align="right">([0-9]*)</td>.*,\2 \1 | \3 \4 | \5 SE | \6 LE,p')"
    select_and_play
}

x1337x () {
    data="$(curl -s "$http3" "https://1337x.to/search/$name/1/" | tr -d '\n' | sed 's,<i class="flaticon-[^"]*"></i></a><a href=",\n,g' | sed -nE 's,(^/torrent/[^"]*)">(.*)</a>.*<td class="coll-2 seeds">([0-9]*)</td>.?<td class="coll-3 leeches">([0-9]*)</td>.*<td class="coll-4 size mob-[^"]*">([^<]*).*,https://www.1377x.to\1 \2 | \5 | \3 SE | \4 LE,p')"
    exit_if_no_magnet_link "$http3"
}

yts () {
    resp="$(curl -s "$http3" "https://yts.mx/api/v2/list_movies.json?sort=seeds&limit=30&query_term=$name" | sed 's/"id":/\n&/g')"
    data="$(printf '%s' "$resp" | sed -nE 's@"id":([^,]*).*"title(_long)?":"([^"]*).*"rating":([0-9\.]*).*@\1 \3 | \4@p')"
    selection || title="${magnet% | *}" && data="$(printf '%s' "$resp" | sed -nE "/\"id\":${magnet%% *}/ {s@[^{]*\{[^{]*hash\":\"([^\"]*)\",\"quality\":\"([^\"]*)\",\"type\":\"([^\"]*)\",\"is_repack\":\"[^\"]*\",\"video_codec\":\"[^\"]*\",\"bit_depth\":\"[^\"]*\",\"audio_channels\":\"[^\"]*\",\"seeds\":([0-9]*),\"peers\":([0-9]*),\"size\":\"([^\"]*)\"[^{]*@\1 \2 | \3 | \6 | \4 SE | \5 LE\n@pg}" | sed '/^{/d')"
    selection || $client $player "magnet:?xt=urn:btih:${magnet%% *}&dn=${title#* }&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&amp;tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969%2Fannounce&amp;tr=udp%3A%2F%2F9.rarbg.to%3A2710%2Fannounce&amp;tr=udp%3A%2F%2Fp4p.arenabg.ch%3A1337%2Fannounce&amp;tr=udp%3A%2F%2Ftracker.cyberia.is%3A6969%2Fannounce&amp;tr=http%3A%2F%2Fp4p.arenabg.com%3A1337%2Fannounce&amp;tr=udp%3A%2F%2Ftracker.internetwarriors.net%3A1337%2Fannounce"
}

eztv () {
    data="$(curl -s "$http3" "https://ww1.yify.world/movies?keyword=$name" | tr -d '\n' | sed 's@[[:space:]]<h4 class="rating">@\nclass="rating">@g' | sed -nE 's,^class="rating">([0-9\.]*).*<a href="(https://ww1\.yify\.world/[^"]*)" class="[^"]*">(.*)</a>[[:space:]]*<div class="browse-[^"]*">([0-9]*).*,\2 \3 | \1 | \4,p')"
    selection || data="$(curl -s "${magnet%% *}" | tr -d '\n' | sed 's/                    <tr>/\n/g' | sed -nE 's,[[:space:]]*<td>([^<]*)</td>[[:space:]]*<td>([^<]*)</td>[[:space:]]*<td>([^<]*)</td>.*href="(magnet:\?xt=[^"]*).*,\4 \2 | \1 | \3,p')"
    select_and_play
}

rarbg () {
    data="$(curl -s "$http3" "https://www2.rarbggo.to/search/?search=$name" | tr -d '\n' | sed 's@<a href="/torrent/@\n@g' | sed -nE 's,([^"]*)" title="([^"]*) torrent">.*<td width="100px" class="tlista" align="center">([^<]*).*<td width="50px" class="tlista" align="center"><font color="#990000">([0-9]*).*<td width="50px" class="tlista" align="center">([0-9]*).*,https://www2.rarbggo.to/torrent/\1 \2 | \3 | \4 SE | \5 LE,p')"
    exit_if_no_magnet_link "$http3"
}

nyaa () {
    count=0

    while {
        [ -z "$data" ] || printf '%s' "$data" | grep -q '<center><h1>302 Found</h1></center>'
     } && [ "$count" -lt "$nyaa_max_retries" ]; do

        data="$(curl -sL "$http3" "https://nyaa.unblockit.ong/?f=1$eng&s=seeders&q=$name")"
        : $((count+=1))
    done

    data="$(printf '%s' "$data" | tr -d '\n' | sed 's@a href="/view/[0-9]*" title="@\n@g' | sed -nE 's,([^"]*).*(magnet:\?xt=[^"]*).*\t\t*</td>\t\t*<td class="text-center">([^<]*)</td>\t\t*<td class="text-center" data-timestamp="[0-9]*">[^<]*</td>\t\t*<td class="text-center">([0-9]*)</td>\t\t*<td class="text-center">([0-9]*)</td>.*,\2 \1 | \3 | \4 SE | \5 LE,p')"
    select_and_play
}    

animetosho () {
    data="$(curl -s "https://animetosho.org/search?q=$name" | tr -d '\n' | sed 's/<div class="size"/\n/g' | sed -nE 's,[^>]*>([^<]*).*<a href="https://animetosho.org/view/[^"]*">(.*)</a></div><div class="links">.*<a href="(magnet:\?xt=[^"]*)">Magnet.*<span title="Seeders: ([0-9]*?) \/ Leechers: ([0-9]*?)".*,\3 \2 | \1 | \4 SE | \5 LE,p')"
    select_and_play
}    

while getopts vmdgqixpyernEsawfh OPT; do
    case $OPT in
        v) player=vlc ;;
        m) player=mpv ;;
        d) player=aria2c ;;
        g) player='printf %s\n' ;;
        q) player="qbittorrent --save-path=$(pwd)" ;;
        i) player='mpv --force-window=immediate --speed=1' ;;
        x) torrent=x1337x ;;
        p) torrent=piratebay ;;
        y) torrent=yts ;;
        e) torrent=eztv ;;
        r) torrent=rarbg ;;
        n) torrent=nyaa ;;
        E) torrent=nyaa && eng='&c=1_2' ;;
        a) torrent=animetosho ;;
        w) client=webtorrent ;;
        f) client=peerflix ;;
        *) print_help ;;
	  esac
done
shift $((OPTIND - 1))

[ "${player%% *}" = mpv ] || [ "$player" = vlc ] && dep_ch "$client" && [ "$player" != 'mpv --force-window=immediate --speed=1' ] || unset client

uname -a | grep -qE '[Aa]ndroid' && {
    case "$player" in
        mpv) player=mplayer ;;
        vlc) player=smplayer ;;
    esac

    preview_box_size=18%
    [ -n "$client" ] && client="$client --no-quit"
}

dep_ch "$player" curl
[ -t 0 ] && dep_ch fzf || dep_ch "$menu" notify-send

[ "$err" = true ] && exit 1

[ "$player" = mpv ] || [ "$player" = vlc ] || [ "${player#s}" = mplayer ] && player="--$player" 
[ "${player%% *}" = qbittorrent ] || [ "$player" = 'mpv --force-window=immediate --speed=1' ] && player="setsid $player"

[ -z "$torrent" ] && {
    torrent="$(printf 'x1337x\npiratebay\nyts\neztv\nrarbg\nnyaa\nanimetosho' | menu 'Select a torrent: ')" || {
    notify-send "Nothing's Selected" && exit
    }
}

name="$*"
[ -z "$name" ] && {
    [ -t 0 ] && printf '\033[1;35mSearch Torrent\n> \033[0m' && read -r name || name="$(menu 'Search a Torrent: ')"
}
[ -z "$name" ] && msg "Nothing's Entered" '\033[1;33m' && exit

[ -t 0 ] && printf '\033[1;36mSearching %s in %s\033[0m\n' "$name" "$torrent" || notify-send "Searching $name in $torrent"
name=$(printf '%s' "$name" | sed 's/ /%20/g')

curl -V | grep -q 'Features: .*HTTP3' && http3=--http3 

$torrent
